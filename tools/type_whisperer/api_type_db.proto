syntax = "proto3";

package tools.type_whisperer;

message TypeDbDescription {
  // Fully qualified package name.
  string qualified_package = 2;

  // Path to .proto from API root.
  string proto_path = 3;

  // Type's name in the next major version of the API.
  string next_version_type_name = 4;
}

// API type database. This describes the types in the API and the upgrade path
// of types, packages and proto paths across major versions of the API.
message TypeDb {
  // Map from fully qualified type name to description.
  map<string, TypeDbDescription> types = 1;

  // Map from fully qualified package to the package's name in the next major
  // version of the API.
  map<string, string> next_version_packages = 2;

  // Map from .proto path to the proto's path in the next major version of the
  // API.
  map<string, string> next_version_proto_paths = 3;
}
